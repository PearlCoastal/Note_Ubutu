【1】输入与输出
      int getchar(void);
      功能：从终端读取一个字符
      参数：无
      返回值：成功返回读取到的字符的ASCII值，出错返回EOF

      int putchar(int c);
      功能：向终端输出一个字符
      参数：c  要输出的字符 或者是其对应的ASCII值
      返回值：成功输出的字符， 失败返回EOF

练习：
   1、从终端读取一个字符，进行大小写转换。
   2、向终端输出。

【2】Makefile

     目标文件：依赖文件
              command

     task.o:task.c
          $(CC) $(CFLAGS) $< -o $@
 
     $   代表取出变量的值
     $<  第一个依赖文件
     $@  代表目标文件


【3】
     int scanf(const char *format, ...);
     功能：读取终端任意数据
     参数： format  读取数据的控制字符串
                    %d       整数
                    %c       字符
                    %s       字符串
                    %f       浮点型
                    %lf      double
            ...     地址列表
     返回值：成功读取元素的个数
     
     垃圾字符回收方式：
     1-- getchar（） 吃掉一个字符，只能用于函数之外

     2-- %*c  它只能抑制一个字符

     3-- ' '  空格字符，可以消掉空格 、tab、\n


【4】读取字符串
      char *gets(char *s);
      功能：读取一个字符串
      参数：s  保存读取到字符串的缓存的首地址
      返回值：  s

     int puts(const char *s);
     功能：向终端输出一个字符串
     参数： s  所要输出的字符串的首地址
     返回值：成功非负的数， 出错 EOF


练习：
    1、从终端读取两个整数，实现交换。
    2、要求不能使用中间变量


【5】二维数组
     int a[3][4]；

     1-- 二维数组的数组名，代表着数组的首行的行地址。a + i 移动i行。
     2-- a[i]  所代表含义是数组的每行列地址。a[i]+j 在第i行移动j列，得到&a[i][j]
          
     a[i][j] <==> *(a[i] + j) <==> *(*(a+i) + j)

     *(a+i) 相当于为a 做了一个降级操作。由行指针变为列指针。


    strcpy  ， strcat ， strlen ， strcmp
















